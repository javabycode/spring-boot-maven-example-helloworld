version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  jq: circleci/jq@2.0.1

executors:
  utility:
    docker:
      - image: buildpack-deps:jessie
    working_directory: /tmp

commands:
  generate_deploy_params:
    description: "Generate parameters for the DeployWildflyDomainMode SSM document"
    parameters:
      apiToken:
        type: env_var_name
        default: ARTIFACTORY_API_TOKEN
    steps:
      - jq/install
      - run: mkdir -p workspace
      - run:
          name: Generate Command Parameters
          command: |
            COMMAND_PARAMETERS=$(cat \<<END_HEREDOC
            {
              "S3Bucket": [
                "na"
              ],
              "artifactName": [
                "primefaces-6.2.10.jar"
              ],
              "artifactPackage": [
                "org.primefaces.primefaces"
              ],
              "artifactRepoAuthHeader": [
                "X-JFrog-Art-Api: $<< parameters.apiToken >>"
              ],
              "artifactRepoUrl": [
                "mytutor.jfrog.io/artifactory/libs-release-local"
              ],
              "artifactVersion": [
                "6.2.10"
              ],
              "autoscalingGroupName": [
                "na"
              ],
              "debug": [
                "true"
              ],
              "deployDir": [
                "/opt"
              ],
              "deployName": [
                "primefaces.jar"
              ],
              "deployVersion": [
                "6.2.10"
              ],
              "domainControllerHost": [
                "dc-spf-1230.mytutor.co.uk"
              ],
              "executionTimeout": [
                "3600"
              ],
              "notifyNewRelic": [
                "na"
              ],
              "scriptDir": [
                "/home/bamboo/mercury1-safe-ssh/ssh/scripts"
              ],
              "targetServerGroup": [
                "main-server-group"
              ],
              "wildflyDir": [
                "/applications/mtw"
              ],
              "workingDirectory": [
                ""
              ]
            }
            END_HEREDOC
            )
            echo "$COMMAND_PARAMETERS" | jq -c > /tmp/workspace/deploy.json
      - persist_to_workspace:
          root: workspace
          paths:
            - deploy.json
  ssm_send_command:
    description: "Run an remote script against a target resource group"
    parameters:
      documentName:
        type: string
      documentVersion:
        type: string
      resourceGroupName:
        type: string
      timeout:
        type: string
        default: "60"
      concurrency:
        type: string
        default: "1"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: SSM Send Command
          command: |
            aws ssm send-command \
            --document-name "<< parameters.documentName >>" \
            --document-version "<< parameters.documentVersion >>" \
            --targets '[{"Key":"resource-groups:Name","Values":["<< parameters.resourceGroupName >>"]}]' \
            --parameters "$(cat /tmp/workspace/deploy.json)" \
            --timeout-seconds << parameters.timeout >> \
            --max-concurrency "<< parameters.concurrency >>" \
            --max-errors "0" > /dev/null

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-node
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "./pom.xml" }}
      - run:
          name: Install Dependencies
          command: mvn dependency:go-offline --settings 'pom.xml'
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "./pom.xml" }}
  test:
    docker:
      - image: circleci/openjdk:8-jdk-node
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "./pom.xml" }}
      - run:
          name: Run Tests
          command: mvn verify --settings 'pom.xml'
      - store_test_results:
          path: target/surefire-reports
  publish:
    docker:
      - image: circleci/openjdk:8-jdk-node
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "./pom.xml" }}
      - run:
          name: Build Artifact
          command: mvn package
      - run:
          name: Prepare artifacts folder
          command: mkdir /tmp/artifacts
      - store_artifacts:
          path: target/example.jar
          destination: example-artifact.jar
      - store_artifacts:
          path: /tmp/artifacts
  conf_deploy:
    executor: utility
    steps:
      - generate_deploy_params
  deploy:
    executor: aws-cli/default
    steps:
      - aws-cli/install
      - aws-cli/setup:
          aws-region: AWS_REGION
      - run: aws --version
      - ssm_send_command:
          documentName: "DeployWildflyDomainMode"
          documentVersion: "13"
          resourceGroupName: "DevDomainControllers"

workflows:
  version: 2.1
  features:
    jobs:
      - build
      - test:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - test
      - conf_deploy:
          context: artifactory
          requires:
            - hold
      - deploy:
          context: aws
          requires:
            - conf_deploy